{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/enemy.js","webpack:///./src/game.js","webpack:///./src/game_view.js","webpack:///./src/index.js","webpack:///./src/moving_object.js","webpack:///./src/projectile.js","webpack:///./src/score.js","webpack:///./src/score_view.js","webpack:///./src/stats.js","webpack:///./src/stats_view.js","webpack:///./src/tower.js","webpack:///./src/util.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,sBAAsB,mBAAO,CAAC,+CAAiB;AAC/C,cAAc,mBAAO,CAAC,+BAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,sB;;;;;;;;;;;ACjFA,cAAc,mBAAO,CAAC,+BAAS;AAC/B,mBAAmB,mBAAO,CAAC,yCAAc;AACzC,cAAc,mBAAO,CAAC,+BAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,2BAA2B,uBAAuB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,oBAAoB;AAC5C,4BAA4B,yBAAyB;;AAErD;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA,sB;;;;;;;;;;;ACpLA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;;;;;;;;;;;ACxBA;AACA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,iBAAiB,mBAAO,CAAC,uCAAa;AACtC,cAAc,mBAAO,CAAC,+BAAS;AAC/B,cAAc,mBAAO,CAAC,+BAAS;AAC/B,cAAc,mBAAO,CAAC,+BAAS;AAC/B,kBAAkB,mBAAO,CAAC,yCAAc;AACxC,cAAc,mBAAO,CAAC,+BAAS;AAC/B,kBAAkB,mBAAO,CAAC,yCAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;AACA;AACA;AACA;AACA,gC;AACA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;ACrED,aAAa,mBAAO,CAAC,6BAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,6B;;;;;;;;;;;AC5CA,sBAAsB,mBAAO,CAAC,+CAAiB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2B;;;;;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C,wCAAwC,MAAM;AAC9C;AACA;;AAEA,uB;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;ACjBA,cAAc,mBAAO,CAAC,+BAAS;AAC/B,cAAc,mBAAO,CAAC,+BAAS;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD,6CAA6C,WAAW;AACxD,SAAS;AACT;AACA;AACA;AACA,4CAA4C,aAAa;AACzD,6CAA6C,UAAU;AACvD;AACA;AACA;;AAEA,uB;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;AChDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qB","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const  MovingObject = require(\"./moving_object\")\nconst Tower = require(\"./tower\")\n\nclass Enemy extends MovingObject {\n    constructor(x, y, dx, dy, radius, color, game) {\n        super(x, y, dx, dy, radius, color, game)\n        this.x = 4;\n        this.y = 50;\n        this.dx = 1;\n        this.dy = 1;\n        this.radius = 8;\n        this.color = \"black\"\n        this.speed = 1;\n        this.hp = 10\n    }\n\n    // collideWith(projectile) {\n    //     this.hp -= projectile.damage\n    //     if (this.hp <= 0) {\n    //         this.remove()\n    //     }\n    // }\n\n    update(context) {\n        if (this.x + this.radius < 498 && this.y === 50) {\n            this.x += this.dx;\n        }\n        // right\n        if (this.x === 490 && this.y + this.radius < 318) {\n            this.y += this.dy\n        }\n        // // down\n        if (this.x + this.radius > 378 && this.y === 310) {\n            this.x -= this.dx\n        }\n        // // left\n        if (this.x === 370 && this.y + this.radius > 138 && this.y < 330) {\n            this.y -= this.dy\n        }\n        // // up\n        if (this.x + this.radius > 278 && this.x + this.radius < 379 && this.y === 130) {\n            this.x -= this.dx\n        }\n        // // left\n        if (this.x === 270 && this.y + this.radius < 318 && this.y > 100 ) {\n            this.y += this.dy\n        }\n        // // down\n        if (this.x + this.radius > 178 && this.x < 317 && this.y === 310) {\n            this.x -= this.dx\n        }\n        // // left\n        if (this.x === 170 && this.y + this.radius > 138 && this.y < 338 ) {\n            this.y -= this.dy\n        }\n        // // up\n        if (this.x + this.radius > 78 && this.x + this.radius < 250 && this.y === 130) {\n            this.x -= this.dx\n        }\n        // left\n        if (this.x === 70 && this.y + this.radius < 378 && this.y > 100 ) {\n            this.y += this.dy\n        }\n        // down\n        if (this.x + this.radius < 578 && this.y < 371 && this.y > 369) {\n            this.x += this.dx;\n        }\n        // right\n        this.draw(context)\n\n\n\n        if (this.x === 570 && this.y === 370) {\n            lives--\n            this.remove()\n        }\n    }\n\n\n\n}\nmodule.exports = Enemy","const Enemy = require(\"./enemy\")\nconst Projectile = require(\"./projectile\")\nconst Tower = require(\"./tower\")\n\n// let grid;\n// grid = [\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"o\", \"o\", \"o\", \"o\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"x\", \"x\",],\n//     [\"o\", \"o\", \"o\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\", \"x\",],\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"x\", \"x\", \"x\",],\n//     [\"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\", \"o\",]\n// ]\n\nclass Game {\n    constructor(context){\n        this.context = context\n        this.enemies = [];\n        this.projectiles = [];\n        this.towers = [];\n    }\n\n\n    add(object) {\n        if (object instanceof Enemy) {\n            this.enemies.push(object);\n        } else if (object instanceof Projectile) {\n            this.projectiles.push(object);\n        } else if (object instanceof Tower) {\n            this.towers.push(object);\n        } else {\n            throw new Error(\"unknown type of object\");\n        }\n    };\n\n    allObjects() {\n        return [].concat(this.enemies, this.projectiles, this.towers);\n    };\n\n\n\n    checkCollisions() {\n        const allObjects = this.allObjects();\n        for (let i = 0; i < allObjects.length; i++) {\n            for (let j = 0; j < allObjects.length; j++) {\n                const obj1 = allObjects[i];\n                const obj2 = allObjects[j];\n\n                if (obj1.isCollidedWith(obj2)) {\n                    const collision = obj1.collideWith(obj2);\n                    if (collision) return;\n                }\n            }\n        }\n    };\n\n    draw(grid, context){\n        for(let row = 0; row < grid.length ; row++ ){\n            for(let col = 0; col < grid[row].length ; col++) {\n\n                if (grid[row][col] == 'o') {\n                    context.fillStyle = \"green\";\n                } else if (grid[row][col] == 'x') {\n                    context.fillStyle = \"tan\";\n                } else {\n                    context.fillStyle = \"red\"\n                }\n                context.fillRect(col * tileSize, row * tileSize, tileSize, tileSize);\n                context.strokeRect(col * tileSize, row * tileSize, tileSize, tileSize);\n            }\n        }\n        this.allObjects().forEach(object => {\n            object.draw(context);\n        })\n        this.enemies.forEach(enemy => {\n            enemy.update(context)\n            // console.log(this.towers)\n            this.towers.forEach(tower => {\n                // console.log(\"something\")\n                tower.fireProjectile(enemy)\n            })\n        })\n        // this.draw(grid, context)\n    }\n\n    // moveObjects(delta) {\n    //     this.allObjects().forEach(function (object) {\n    //         object.move(delta);\n    //     });\n    // };\n\n    //add event handler and repaint the canvas\n\n\n    remove(object) {\n        if (object instanceof Enemy) {\n            if (this.enemies.indexOf(object) >= 0) {\n                this.enemies.splice(this.enemies.indexOf(object), 1);\n            }\n        } else if (object instanceof Projectile) {\n            this.projectiles.splice(this.projectiles.indexOf(object), 1);\n        } else if (object instanceof Tower) {\n            this.towers.splice(this.towers.indexOf(object), 1);\n        } else {\n            throw new Error(\"unknown type of object\");\n        }\n\n    };\n\n    set_wave() {\n        setInterval(() => {\n            if (this.enemies.length === 0){\n            console.log(\"inside set_wave\")\n            for(let i = 0; i < 10; i ++) {\n                let enemy = new Enemy(4, 50, 1, 1, 8, \"black\", this);\n                    this.add(enemy)\n                }\n            }\n        }, 1000)\n    }\n\n    createEnemyArr() {\n        let enemyArr = []\n        for(let i = 0; i < 10; i ++) {\n            let enemy = new Enemy(4, 50, 1, 1, 8, \"black\", this);\n            enemyArr.push(enemy)\n        }\n        return enemyArr\n    }\n\n    next_wave() {\n        return this.createEnemyArr().map(enemy => {\n            enemy.hp = enemy.hp * 1.25\n        })\n    }\n\n    play() {\n        // this.set_wave()\n        let enemies = this.createEnemyArr()\n        let counter = 0\n        setInterval(() => {\n            if(counter < enemies.length) {\n                this.add(enemies[counter])\n                counter++\n            } else {\n                this.play()\n            }\n        }, 1000);\n        // clearInterval(spawn)\n\n\n    }\n\n    roundOver() {\n        this.enemies.length === 0\n    }\n\n    lose() {\n        lives === 0\n    }\n\n\n\n}\n\nmodule.exports = Game;","class GameView {\n    constructor(game, context){\n        this.context = context;\n        this.game = game;\n        this.grid = grid\n    }\n\n    animate(time) {\n        const timeDelta = time - this.lastTime;\n        // this.game.step(timeDelta);\n        this.game.draw(this.grid, this.context);\n        this.lastTime = time;\n\n        requestAnimationFrame(this.animate.bind(this));\n    };\n\n    start() {\n        if( lives > 0 ) {\n            this.game.play()\n        }\n        this.lastTime = 0;\n        requestAnimationFrame(this.animate.bind(this));\n    };\n}\nmodule.exports = GameView;","// import \"./score.js/index.js\"\nconst Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\nconst Tower = require(\"./tower\")\nconst Enemy = require(\"./enemy\")\nconst Score = require(\"./score\")\nconst ScoreView = require(\"./score_view\")\nconst Stats = require(\"./stats\")\nconst StatsView = require(\"./stats_view\")\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById(\"canvas\")\n    const context = canvas.getContext(\"2d\")\n    const game = new Game(context);\n    const getMousePos = (canvas, event) => {\n        let rect = canvas.getBoundingClientRect();\n        return {\n            x: event.clientX - rect.left,\n            y: event.clientY - rect.top\n        }\n    }\n    const handleClick = (event) => {    \n        let pos = getMousePos(canvas, event)\n        let y = Number.parseInt(pos.x/20)\n        let x = Number.parseInt(pos.y/20)\n        if (grid[x][y] === \"o\"){ \n            let tower = new Tower(y, x, canvas)\n            grid[x][y] = tower\n            game.add(tower)\n            debugger\n        } \n        // else if (grid[x][y] instanceof Tower){\n        //     console.log(grid[x][y])\n        //     game.remove(grid[x][y])\n        //     grid[x][y] = \"o\"\n        // }\n        \n    }\n    //  setInterval(() => {\n            \n    //     }, 3000);\n    canvas.addEventListener('click', handleClick)\n    new GameView(game, context).start();\n\n    const score = document.getElementById(\"score\")\n    const scoreContext = score.getContext(\"2d\")\n    const scoreEle = new Score(scoreContext)\n    new ScoreView(scoreEle).start()\n    \n    const stats = document.getElementById(\"stats\")\n    const statsContext = stats.getContext(\"2d\")\n    const statsEle = new Stats(statsContext)\n    new StatsView(scoreEle).start()\n    \n    const statsClick = (event) => {\n        let pos = getMousePos(canvas, event)\n        let x = pos.x\n        let y = pos.y\n        let gy = Number.parseInt(pos.x / 20)\n        let gx = Number.parseInt(pos.y / 20)\n        if (grid[gx][gy] instanceof Tower) {\n            statsEle.draw(grid[gx][gy])\n        } \n        // else if (grid[x][y] instanceof Enemy) {\n        //     statsEle.draw(grid[x][y])\n        // }\n\n    }\n    canvas.addEventListener('click', statsClick)\n})\n","const Util = require(\"./util\")\n\nclass MovingObject {\n    constructor(x, y, dx, dy, radius, color, game) {\n        this.x = x;\n        this.y = y;\n        this.dx = dx;\n        this.dy = dy;\n        this.radius = radius;\n        this.color = color;\n        this.game = game;\n        this.NORMAL_FRAME_TIME_DELTA = 1000 / 60\n    }\n\n    draw(context){\n        context.fillStyle = this.color;\n        context.beginPath();\n        context.arc(\n            this.x, this.y, this.radius, 0, 2 * Math.PI, true\n        );\n        context.fill();\n\n    }\n\n    iscollideWith(otherObject) {\n        const centerDist = Util.dist([this.x, this.y], [otherObject.x, otherObject.y]);\n        return centerDist < (this.radius + otherObject.radius);\n    }\n\n    // move(timeDelta) {\n    //     const velocityScale = timeDelta / this.NORMAL_FRAME_TIME_DELTA,\n    //         offsetX = this.dx * velocityScale,\n    //         offsetY = this.dy * velocityScale;\n\n    //     this.x += offsetX; \n    //     this.y += offsetY;\n    // };\n\n    remove() {\n        this.game.remove(this);\n    };\n\n}\n\nmodule.exports = MovingObject","const MovingObject =  require(\"./moving_object\")\n\nclass Projectile extends MovingObject {\n    constructor(x, y, dx, dy, radius, color, game) {\n        super(x, y, dx, dy, radius, color, game)\n        this.radius = 2;\n        this.speed = 15\n        this.damage = 10\n    }\n    \n}\nmodule.exports = Projectile","class Score {\n    constructor(context) {\n        this.context = context\n    }\n\n    draw() {\n        this.context.clearRect(0, 0, 300 , 100)\n        this.context.font = \"20px Arial\";\n        this.context.fillText(`Score: ${score}`, 10, 20);\n        this.context.fillText(`Lives: ${lives}`, 10, 50)\n    }\n}\n\nmodule.exports = Score;","class ScoreView {\n    constructor(score, context) {\n        this.context = context;\n        this.score = score;\n    }\n\n    animate(time) {\n        this.score.draw();\n        this.lastTime = time;\n        requestAnimationFrame(this.animate.bind(this));\n    };\n\n    start() {\n        this.lastTime = 0;\n        requestAnimationFrame(this.animate.bind(this));\n    };\n}\nmodule.exports = ScoreView;","const Tower = require(\"./tower\")\nconst Enemy = require(\"./enemy\")\n\nclass Stats {\n    constructor(context) {\n        this.context = context\n    }\n\n    draw(object = null) {\n        if (object instanceof Tower) {\n            this.context.clearRect(0, 0, 300, 300)\n            this.context.font = \"20px Arial\";\n            this.context.fillText(`Tower`, 10, 80)\n            this.context.fillText(`Range: ${object.range}`, 10, 110)\n            this.context.fillText(`Damage: ${object.dmg}`, 10, 140)\n        } else if (object instanceof Enemy) {\n            this.context.clearRect(0, 0, 300, 300)\n            this.context.font = \"20px Arial\";\n            this.context.fillText(`Enemy`, 10, 80)\n            this.context.fillText(`Speed: ${object.speed}`, 10, 110)\n            this.context.fillText(`Health: ${object.hp}`, 10, 140)\n        }\n    }\n}\n\nmodule.exports = Stats;","class StatsView {\n    constructor(stats, context) {\n        this.context = context;\n        this.stats = stats;\n    }\n\n    animate(time) {\n        this.stats.draw();\n        this.lastTime = time;\n        requestAnimationFrame(this.animate.bind(this));\n    };\n\n    start() {\n        this.lastTime = 0;\n        requestAnimationFrame(this.animate.bind(this));\n    };\n}\nmodule.exports = StatsView;","class Tower {\n    constructor(row, col, canvas) {\n        this.row = row;\n        this.col = col;\n        this.range = 4 * tileSize\n        this.dmg = .02\n        this.firingRate = 50\n        this.canvas = canvas\n        this.context = this.canvas.getContext(\"2d\")\n    }\n\n    draw(context) {\n        context.fillStyle = \"red\"\n        context.strokeRect(this.row * tileSize, this.col * tileSize, tileSize, tileSize);\n        context.fillRect(this.row * tileSize, this.col * tileSize, tileSize, tileSize);\n    }\n\n    inRange(enemy) {\n        const a = enemy.x - ((this.row * 20) + 10) \n        const b = enemy.y - ((this.col * 20) + 10) \n        const dist = Math.sqrt(Math.pow(a , 2) + Math.pow(b, 2))\n        if (dist < this.range) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    fireProjectile(enemy) {\n        if (this.inRange(enemy) === true) {\n\t\t\tthis.context.lineWidth = 1\n\t\t\tthis.context.strokeStyle = \"black\"\n\t\t\tthis.context.beginPath()\n\t\t\tthis.context.moveTo(((this.row * 20) + 10), ((this.col * 20) + 10))\n\t\t\tthis.context.lineTo(enemy.x, enemy.y)\n            this.context.stroke();\n            \n            enemy.hp -= this.dmg\n\n            if (enemy.hp <= 0) {\n                // console.log(enemy)\n                enemy.remove()\n                score++\n            }\n        }\n    }\n}\n\nmodule.exports = Tower","class Util {\n\n    scale(vec, m) {\n        return [vec[0] * m, vec[1] * m];\n    }\n\n    dist(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    }\n\n    norm(vec) {\n        return Util.dist([0, 0], vec);\n    }\n\n    dir(vec) {\n        const norm = Util.norm(vec);\n        return Util.scale(vec, 1 / norm);\n    }\n}\n\nmodule.exports = Util"],"sourceRoot":""}